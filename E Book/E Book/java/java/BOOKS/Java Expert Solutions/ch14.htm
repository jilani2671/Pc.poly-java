<HTML>
<HEAD>
<TITLE>Chapter 14 -- Creating Your Own Class Archive Files</TITLE>

<META>
</HEAD>
<BODY TEXT="#000000" BGCOLOR="#FFFFFF" LINK="#0000EE" VLINK="#551A8B" ALINK="#CE2910">
<H1><FONT SIZE=6 COLOR=#FF0000>Chapter&nbsp;14</FONT></H1>
<H1><FONT SIZE=6 COLOR=#FF0000>Creating Your Own Class Archive
Files</FONT></H1>
<P>
<I><B>by Mark Wutka</B></I>
<HR>
<P>
<CENTER><B><FONT SIZE=5><A NAME="CONTENTS">CONTENTS</A></FONT></B></CENTER>
<UL>
<LI><A HREF="#ClassArchiveFiles">
Class Archive Files</A>
<LI><A HREF="#CreatingYourOwnArchiveFilewithInfoZIP">
Creating Your Own Archive File with Info-ZIP</A>
<LI><A HREF="#ViewingtheContentsofaZipArchive">
 Viewing the Contents of a Zip Archive</A>
<LI><A HREF="#AddingClassesDirectlytotheBrowsersLibrary">
Adding Classes Directly to the Browser's Library</A>
<LI><A HREF="#CreatingClassArchiveswithOtherZipArchivers">
Creating Class Archives with Other Zip Archivers</A>
<LI><A HREF="#CreatingCabinetFilesforInternetExplorer">
Creating Cabinet Files for Internet Explorer</A>
</UL>

<HR>
<H2><A NAME="ClassArchiveFiles"><FONT SIZE=5 COLOR=#FF0000>
Class Archive Files</FONT></A></H2>
<P>
Java classes are sometimes packaged together in special archive
files. To date, the only officially allowed format for these files
is the zip format.
<P>
When you install the JDK, or almost any Java-enabled browser,
you will notice a .zip file somewhere in the files you have installed.
This file is sometimes but not always called classes.zip.
<P>
Netscape, for instance, stores its files in moz2_0.zip or moz3_0.zip.
(The numbers indicate version numbers; they might also be 2_01,
3_01, and so on.)
<P>
These zip files hold Java .class files in uncompressed format.
The Java runtime environment can't read a class file from a zip
file if it has been compressed. Since compression is one of the
major features of zip archiving programs, you must explicitly
turn off compression when you create the archive.
<P>
Sun will soon add another archive format to the mix: the JAR format
(Java ARchive). Instead of using the current method in which each
class is downloaded individually, you should be able to package
your classes in JAR files and download them in one large bundle.
And you should not have to add any code to your programs to allow
JAR packaging.
<H2><A NAME="CreatingYourOwnArchiveFilewithInfoZIP"><FONT SIZE=5 COLOR=#FF0000>
Creating Your Own Archive File with Info-ZIP</FONT></A></H2>
<P>
The first thing you need to create a class archive, other than
the classes themselves, is a zip archiver. The Info-ZIP is an
excellent archiver for creating zip files since it is free, available
on a variety of platforms, and can store files in uncompressed
format.
<P>
The main home page for Info-ZIP is located at <B><A HREF="http://quest.jpl.nasa.gov/Info-ZIP">http://quest.jpl.nasa.gov/Info-ZIP</A></B>
and at a number of mirror sites. Info-ZIP is available in both
source and binary form, with binaries available for Windows, OS/2,
VMS, most major UNIX platforms, and more. Just follow the instructions
on the Info-ZIP Web page for downloading and installing for your
platform. Figure 14.1 shows the Info-ZIP Web page.
<P>
<A HREF="f14-1.gif"><B>Figure 14.1 : </B><I>The Info-Zip program is available for a
wide variety of systems</I>.</A>
<P>
If the classes in your archive belong to a package, the path name
of each class must have the package name. For each subpackage
name, you must also have a directory. 
<P>
For instance, if you have a class that belongs to a package called:
<TT>mylib.awtstuff. interfaces</TT>,
you must have a directory called <TT>mylib</TT>
holding a subdirectory called <TT>awtstuff</TT>,
which itself must hold a directory called <TT>interfaces</TT>.
Your class must then be stored in the <TT>interfaces</TT>
directory. <BR>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Tip</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Once you've unpacked the zip program, don't forget to add it to your command path.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<P>
To archive the entire <TT>mylib</TT>
package into a file called <TT>mylib.zip</TT>,
go to the parent directory of <TT>mylib</TT>
and type:
<BLOCKQUOTE>
<PRE>
zip -r -0 mylib.zip mylib
</PRE>
</BLOCKQUOTE>
<P>
The <TT>-r</TT> argument tells zip
to include subdirectories in the archive. Without this argument,
you would have to include the full path name of every file in
the <TT>mylib</TT> directory.
<P>
The <TT>-0</TT> option is extremely
important because it stores the files with no compression. If
you don't use the <TT>-0</TT> option,
you still create a zip file but Java can't use it, because zip
compresses files by default.<BR>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Tip</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
When you create a zip archive, remember to add the full path name of the zip file to your <TT>CLASSPATH</TT> variable. Although class files are picked up when their directory name is in the <TT>CLASSPATH</TT>, .zip files must be mentioned explicitly. For 
example, if you created a file called <TT>myclasses.zip</TT>, your <TT>CLASSPATH</TT> under Windows might look like: <TT>CLASSPATH=C:\mystuff\myclasses.zip;C:\JAVA\LIB\CLASSES.ZIP</TT>.
</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<H2><A NAME="ViewingtheContentsofaZipArchive"><FONT SIZE=5 COLOR=#FF0000>
 Viewing the Contents of a Zip Archive</FONT></A></H2>
<P>
Once you have become familiar with the known Java classes, you
might want to start exploring the hidden classes in the various
browsers and Java environments. Begin by finding out what files
are stored in the browser's class library. Use the unzip program
from Info-ZIP. 
<P>
The following command displays the contents of a class archive
named <TT>classes.zip</TT>:
<BLOCKQUOTE>
<PRE>
unzip -v classes.zip
</PRE>
</BLOCKQUOTE>
<P>
These class archives typically hold hundreds of .class files,
so be prepared for many pages of output. Suppose you are browsing
through the <TT>classes.zip</TT> file
from the JDK and notice a class file called <TT>sun/net/www/protocol/http/HttpURLConnection.class</TT>.
You can get a copy of this class with the command:
<BLOCKQUOTE>
<PRE>
unzip classes.zip sun/net/www/protocol/http/HttpURLConnection.class
</PRE>
</BLOCKQUOTE>
<P>
This extracts the file and creates a nice chain of subdirectories
off your current directory. From your current directory, assuming
that &quot;.&quot; is in your <TT>CLASSPATH</TT>
variable, you can examine the method and variable names in this
class with the <TT>javap</TT> command:
<BLOCKQUOTE>
<PRE>
javap sun.net.www.protocol.http.HttpURLConnection<BR>
</PRE>
</BLOCKQUOTE>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Tip</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Notice the relationship between package names and subdirectories. For each &quot;.&quot; in the class name, there is a &quot;/&quot; (under UNIX) or a &quot;\&quot; (under Windows and OS/2) in the .class file path.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<P>
If you are really daring, you can use <TT>javap
-c</TT> to disassemble the code in the .class file:
<BLOCKQUOTE>
<PRE>
javap -c sun.net.www.protocol.http.HttpURLConnection<BR>
</PRE>
</BLOCKQUOTE>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Caution</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Before disassembling any code that comes with a license agreement, look over the license agreement closely. Many vendors explicitly forbid the disassembling of their code. Although they are probably more worried about you stealing their trade secrets than 

just seeing what their code does, you are still breaking the law if you disassemble their code without permission.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<H2><A NAME="AddingClassesDirectlytotheBrowsersLibrary"><FONT SIZE=5 COLOR=#FF0000>
Adding Classes Directly to the Browser's Library</FONT></A></H2>
<P>
Your browser loads classes from the local filesystem if they are
included in its <TT>CLASSPATH</TT>
variable. Sometimes, however, you may want to add classes directly
to the browser's zip library.<BR>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Caution</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
Changing a browser's own class archive is dangerous. You could accidentally introduce a class that bypasses the applet security restrictions.</BLOCKQUOTE>
<BLOCKQUOTE>
You could also accidentally overwrite a necessary class and cause your browser to stop working. Always make a backup copy of the original zip file before making any changes, and make sure you know what you are doing.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<P>
<P>
Adding classes to a zip file is no different from creating a new
zip file. To add the <TT>mylib</TT>
package to a class archive named <TT>classes.zip</TT>,
use the following command:
<BLOCKQUOTE>
<PRE>
zip -0 classes.zip mylib
</PRE>
</BLOCKQUOTE>
<P>
You can also replace classes in a class archive. For instance,
you may want to insert a dummy security manager that removes any
restrictions on applets and applications.
<P>
The security manager for each browser is in a different package,
so you need to adjust your dummy security manager and the zip
command for each browser. To insert a dummy security manager into
Netscape, for instance, you need to replace <TT>netscape.applet.AppletSecurity</TT>.
<P>
The following command does that for Netscape version 2:
<BLOCKQUOTE>
<PRE>
zip -0 moz2_0.zip netscape/applet/AppletSecurity.class
</PRE>
</BLOCKQUOTE>
<P>
You need to have copied <TT>AppletSecurity.class</TT>
into the <TT>netscape/applet</TT>
(<TT>netscape\applet</TT> under Windows)
subdirectory. Again, this is a dangerous thing to play with. You
could open up your entire company's network to malicious hacking
just by replacing classes in your own browser.
<H2><A NAME="CreatingClassArchiveswithOtherZipArchivers"><FONT SIZE=5 COLOR=#FF0000>
Creating Class Archives with Other Zip Archivers</FONT></A></H2>
<P>
You can use any archiver to create zip archives for use with Java
as long as you can turn off the file compression. For example,
the PKZIP 2.04 command-line option to turn off compression is
<TT>-e0</TT>. Unfortunately, PKZIP
does not support long filenames, so its use in archiving Java
classes is limited.
<P>
The WinZip utility provides a nice graphical interface for creating
zip files. You can find WinZip on the Web at <B><A HREF="http://www.winzip.com">http://www.winzip.com</A></B>.
WinZip is a shareware program, so you may try it out for a period
of time before deciding to buy it. You will probably discover
that it is well worth the price.
<P>
One of the advantages of WinZip is that you may view a zip archive
in a window, and view any single file stored in the archive, without
having to unpack it first. Since WinZip recognizes the Windows
file types, when you double-click a file, WinZip brings up the
appropriate viewer for that file.
<P>
When you create a zip archive with WinZip, you can switch off
compression from the screen where you enter file names. Figure
14.2 shows the WinZip screen on which you can switch off compression.
<P>
<A HREF="f14-2.gif"><B>Figure 14.2 : </B><I>Select &quot;None&quot; for compression
type in WinZip</I>.</A>
<H2><A NAME="CreatingCabinetFilesforInternetExplorer"><FONT SIZE=5 COLOR=#FF0000>
Creating Cabinet Files for Internet Explorer</FONT></A></H2>
<P>
Microsoft Internet Explorer supports an alternative to zip files
called cabinets. Cabinets can include .class files, images, and
audio clips. Cabinets are not limited to Java files, however.
IE supports many other kinds of executable content, and any of
them may be packaged in a cabinet file. Cabinets may also contain
compressed data, allowing you to download code quickly.
<P>
The data compression, along with the fact that you can group many
different file types in a cabinet, make cabinets an attractive
alternative to zip files. The biggest disadvantage to cabinets
is that they are currently available only under Internet Explorer.
<P>
In order to store files in a cabinet, you need the Cabinet Development
Kit (CDK) from Microsoft. This is available from Microsoft's Web
site at <B><A HREF="http://www.microsoft.com/workshop/java/cab-f.htm">http://www.microsoft.com/workshop/java/cab-f.htm</A>.</B>
<P>
Once you have downloaded and unpacked the CDK, you can use the
<TT>cabarc</TT> program to create
cabinets. Make sure that your <TT>PATH</TT>
setting includes the directory where you unpacked the CDK. The
command-line for the <TT>cabarc</TT>
program is very similar to that of a zip archiver:
<BLOCKQUOTE>
<PRE>
cabarc n <I>cabfilename files</I>
</PRE>
</BLOCKQUOTE>
<P>
For example, to pack all the .class files and all the .gif files
in the current directory into a cabinet file called <TT>mycabinet.cab</TT>,
you would use the following command:
<BLOCKQUOTE>
<PRE>
cabarc n mycabinet.cab *.class *.gif
</PRE>
</BLOCKQUOTE>
<P>
If you want to include a whole directory tree, add the <TT>-r</TT>
and <TT>-p</TT> options to <TT>cabarc</TT>.
For instance, to package the current directory, including all
subdirectories, and store them in a file called <TT>mycab.cab</TT>,
you would use the following command:
<BLOCKQUOTE>
<PRE>
cabarc -r -p n mycab.cab *.*
</PRE>
</BLOCKQUOTE>
<P>
Once you have created a cabinet file, you can use it in a Web
page by including the following applet parameter:
<BLOCKQUOTE>
<PRE>
&lt;PARAM name=&quot;cabbase&quot; value=&quot;cabfilename&quot;&gt;
</PRE>
</BLOCKQUOTE>
<P>
The following example .html file loads an applet called <TT>MyApplet</TT>
from a cabinet file called <TT>mycab.cab</TT>:
<BLOCKQUOTE>
<PRE>
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Cabinet Example&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
&lt;APPLET codebase=&quot;.&quot; code=&quot;MyApplet.class&quot; width=250 height=250&gt;
&lt;PARAM name=&quot;cabbase&quot; value=&quot;mycab.cab&quot;&gt;
You need a Java enabled browser to see this program.
&lt;/APPLET&gt;
&lt;/BODY&gt;
&lt;/HTML&gt;
</PRE>
</BLOCKQUOTE>
<P>
You don't have to do anything special to access images and audio
clips that are stored in cabinet files. Just access them via the
codebase or document base URLs as you normally would. The IE browser
will take care of the rest.<BR>
<P>
<CENTER>
<TABLE BORDERCOLOR=#000000 BORDER=1 WIDTH=80%>
<TR VALIGN=TOP><TD><B>Note</B></TD></TR>
<TR VALIGN=TOP><TD>
<BLOCKQUOTE>
For Java 1.1, Sun has defined an archive format called JAR (Java ARchive) that is very similar to the cabinet format. It also supports data compression and can store multiple types of files. Since the JAR format will be part of future releases of Java, it 

will be available on any Java-compliant platform.</BLOCKQUOTE>

</TD></TR>
</TABLE>
</CENTER>
<HR>

<CENTER><P><A HREF="ch13.htm"><IMG SRC="pc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A>
<A HREF="#CONTENTS"><IMG SRC="cc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A>
<A HREF="index.htm"><IMG SRC="hb.gif" BORDER=0 HEIGHT=88 WIDTH=140></A>
<A HREF="ch15.htm"><IMG SRC="nc.gif" BORDER=0 HEIGHT=88 WIDTH=140></A>
<HR WIDTH="100%"></P></CENTER>
</BODY>
</HTML>
